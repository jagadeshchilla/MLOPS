# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to not exclude the .idea/ directory.
.idea/

# VS Code
.vscode/

# MLflow
mlruns/
mlartifacts/
.mlflow/

# Jupyter Notebook checkpoints
.ipynb_checkpoints/

# Data files
*.csv
*.xlsx
*.xls
*.json
*.parquet
*.h5
*.hdf5
*.pickle
*.pkl

# Database files
*.db
*.sqlite
*.sqlite3

# Model files
*.model
*.pkl
*.joblib
*.h5
*.pb
*.pth
*.pt
*.onnx
*.tflite

# Log files
*.log
logs/
log/

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Large files and documents
*.pdf
*.docx
*.doc
*.pptx
*.ppt
*.zip
*.tar.gz
*.rar
*.7z

# Media files
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.webm
*.mkv
*.mp3
*.wav
*.flac
*.aac
*.ogg
*.wma

# Image files (large ones)
*.tiff
*.tif
*.bmp
*.raw
*.cr2
*.nef
*.orf
*.sr2

# Backup files
*.bak
*.backup
*.old

# Configuration files with sensitive data
config.ini
.env.local
.env.production
secrets.yaml
credentials.json

# Large text files
large_file.txt
*.txt.large

# Compiled files
*.exe
*.dll
*.dylib
*.so.*

# Package files
*.deb
*.rpm
*.msi
*.dmg
*.pkg

# Virtual environment directories
mlops-env/
venv/
env/
.venv/

# Jupyter Lab workspace
.jupyterlab-workspace

# Pytest
.pytest_cache/

# Coverage reports
htmlcov/
.coverage

# Profiling data
*.prof

# Memory profiling
*.mprof

# Local development
.local/
local/

# IDEs
*.sublime-project
*.sublime-workspace

# Temporary directories
tmp/
temp/
cache/

# Node.js (if using any JS tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# R files (if using R)
.Rhistory
.RData
.Ruserdata

# MATLAB files
*.mat
*.fig
*.slx

# Large datasets
datasets/
data/raw/
data/processed/
data/external/

# Experiment outputs
experiments/
outputs/
results/

# Checkpoints
checkpoints/
*.ckpt

# TensorBoard logs
runs/
tensorboard_logs/

# Weights & Biases
wandb/

# DVC
.dvc/
Dvc/

# Hydra
outputs/
multirun/
.hydra/ 